@model string

@{
    ViewBag.Title = "Room";
    SnakeGameBackend.Models.Jugador jugador = ViewBag.Jugador;
    SnakeGameBackend.Models.PartidaEnEspera partida = ViewBag.Partida;
}

@* <h1>NickName de jugador @jugador.Nickname</h1> *@


<div class="h-100">
    <h2>Chat</h2>
    @* Color a escoger *@
    <label for="colorSelector">Color:</label>
    <div class="card">
        <select id="colorSelector" class="form-control">
            @foreach (var color in ViewBag.Colores)
            {
                <option value="@color" style="background-color: @color; color: white;">@color</option>
            }
        </select>
    </div>

    <div class="row">
        <div class="col-md-12">
            <div id="chat" class="chat">
                <div id="messages" class="messages"></div>
            </div>
        </div>
    </div>

    <div class="row">
        <div class="col-md-12">
            <input id="message" type="text" class="form-control" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-12">
            <button id="btnSend" class="btn btn-primary">Enviar</button>
        </div>
    </div>
</div>

<button id="btnIniciarPartida" class="btn btn-outline-success">Cerrar</button>


<script src="~/lib/microsoft/signalr/dist/browser/signalr.min.js"></script>
@*<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/latest/signalr.min.js"></script>*@

<script>
    var connection = new signalR.HubConnectionBuilder().withUrl("/chat").build();


    connection.start().then(() => {
        console.log("connected");
        connection.invoke("JoinRoom", "@Model", "@jugador.Nickname")
            .catch(function (err) {
                return console.error(err.toString());
            });
    }).catch(function (err) {
        return console.error(err.toString());
    });

    let cantidadJugadores = @partida.CantidadJugadores;
    let jugadoresConectados = @partida.JugadoresConectados;
    connection.on("JugadoresCompletos", function () {
        console.log("Cantidad de jugadores: " + @partida.CantidadJugadores);
        console.log("Jugadores conectados: " + @partida.JugadoresConectados + 1);
            if (cantidadJugadores == jugadoresConectados + 1) {
            //colocar el boton de iniciar partida
            document.getElementById("btnIniciarPartida").style.display = "block";
            jugadoresConectados += 1;
        }
        else {
            document.getElementById("btnIniciarPartida").style.display = "none";
            jugadoresConectados -= 1;
        }
    });

    document.getElementById("btnSend").addEventListener("click", function (event) {
        let room = "@Model";
        let user = "@jugador.Nickname"
        let message = document.getElementById("message").value;

        connection.invoke("SendMessage", room, user, message)
            .catch(function (err) {
                return console.error(err.toString());
            });

        document.getElementById("message").value = "";

        event.preventDefault();
    });

    connection.on("ReceiveMessage", function (user, message) {
        let msg = document.createElement("div");
        msg.innerHTML = `<strong>${user}</strong>: ${message}`;
        document.getElementById("messages").appendChild(msg);
    });

    connection.on("RedirectTo", function (location) {
        window.location.href = location;
    });

    // Manejador de eventos cuando el usuario cierra la página o abandona la sala
    window.addEventListener('beforeunload', function () {
        // Llama a la función LeaveRoom para notificar que el jugador se está yendo
        connection.invoke("LeaveRoom", "@Model", "@jugador.Nickname")
            .catch(function (err) {
                return console.error(err.toString());
            });
    });

    document.getElementById("colorSelector").addEventListener("change", function () {
        highlightSelectedOption();
    });

    function highlightSelectedOption() {
        // Obtener el elemento seleccionado
        var selectedOption = document.getElementById("colorSelector");
        var selectedColor = selectedOption.options[selectedOption.selectedIndex].value;

        // Aplicar el estilo a la opción seleccionada
        selectedOption.style.backgroundColor = selectedColor;
        selectedOption.style.color = "white";
    }

    document.getElementById("btnSend").addEventListener("click", function (event) {
        let room = "@Model";
        let user = "@jugador.Nickname"
        let message = document.getElementById("message").value;
        // Obtener el color seleccionado del combobox
        let selectedColor = document.getElementById("colorSelector").value;

        connection.invoke("SendMessage", room, user, message, selectedColor)
            .catch(function (err) {
                return console.error(err.toString());
            });

        document.getElementById("message").value = "";

        event.preventDefault();
    });

    connection.on("ReceiveMessage", function (user, message, color) {
        let msg = document.createElement("div");
        msg.innerHTML = `<strong style="color: ${color}">${user}</strong>: ${message}`;
        document.getElementById("messages").appendChild(msg);
    });

</script>
